/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Login.Faculty;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.AdminPackage.Faculty;
import Business.AdminPackage.StudentDirectory;
import Business.CoursePackage.Course;
import Business.CoursePackage.CourseCatalog;

/**
 *
 * @author sai_vivek_vangala
 */
public class FacultyLandingPageJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FacultyLandingPage
     */
    JPanel userProcessContainer;
    StudentDirectory studentDir;
    Faculty faculty;
    CourseCatalog courseCatalog;

    public FacultyLandingPageJPanel(JPanel userProcessContainer, StudentDirectory studentDir, Faculty faculty, CourseCatalog courseCatalog) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.courseCatalog = courseCatalog;
        this.faculty = faculty;
        this.studentDir = studentDir;
        welcomeLbl.setText(faculty.getFullName());
        ratingTextArea.setText("Your rating : " + faculty.getRating());
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        welcomeLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        profSpecTable = new javax.swing.JTable();
        ratingTextArea = new javax.swing.JLabel();
        createCourseBtn = new javax.swing.JButton();
        editCourseBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        btnViewProfileDetails = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Welcome");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, -1, -1));
        add(welcomeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(523, 29, 74, 20));

        profSpecTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Region", "Language"
            }
        ));
        jScrollPane1.setViewportView(profSpecTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, 142));
        add(ratingTextArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, 100, 30));

        createCourseBtn.setText("Create Course");
        createCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createCourseBtnActionPerformed(evt);
            }
        });
        add(createCourseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, -1, -1));

        editCourseBtn.setText("Edit Course");
        editCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCourseBtnActionPerformed(evt);
            }
        });
        add(editCourseBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 300, -1, -1));

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        add(refreshBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        btnViewProfileDetails.setText("View Profile Details");
        btnViewProfileDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProfileDetailsActionPerformed(evt);
            }
        });
        add(btnViewProfileDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        ((CardLayout) userProcessContainer.getLayout()).previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void createCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createCourseBtnActionPerformed
        // TODO add your handling code here:
        CreateCourseJPanel createCourseJPanel = new CreateCourseJPanel(userProcessContainer, studentDir, faculty, courseCatalog);
        userProcessContainer.add("createCourseJPanel", createCourseJPanel);
        ((CardLayout) userProcessContainer.getLayout()).next(userProcessContainer);
    }//GEN-LAST:event_createCourseBtnActionPerformed

    private void editCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCourseBtnActionPerformed
        // TODO add your handling code here:

        int selectedRow = profSpecTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a course to edit details", "Warning", JOptionPane.ERROR_MESSAGE);
        } else {
            Course course = (Course) profSpecTable.getValueAt(selectedRow, 0);
            EditCourseJPanel editCourseJPanel = new EditCourseJPanel(userProcessContainer, course);
            userProcessContainer.add("EditCourseJPanel", editCourseJPanel);
            ((CardLayout) userProcessContainer.getLayout()).next(userProcessContainer);
        }

    }//GEN-LAST:event_editCourseBtnActionPerformed

    private void btnViewProfileDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProfileDetailsActionPerformed
        // TODO add your handling code here:
        ViewFacultyProfileJPanel viewFacultyProfileJPanel = new ViewFacultyProfileJPanel(userProcessContainer, faculty);
        this.userProcessContainer.add("ViewFacultyProfileJPanel", viewFacultyProfileJPanel);
        ((CardLayout) this.userProcessContainer.getLayout()).next(userProcessContainer);
    }//GEN-LAST:event_btnViewProfileDetailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btnViewProfileDetails;
    private javax.swing.JButton createCourseBtn;
    private javax.swing.JButton editCourseBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable profSpecTable;
    private javax.swing.JLabel ratingTextArea;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JLabel welcomeLbl;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) profSpecTable.getModel();
        dtm.setRowCount(0);
        System.out.println(courseCatalog);
        System.out.println(courseCatalog.getCourseList());
        for (Course course : courseCatalog.getCourseList()) {
            if (course.getFaculty().getFullName().equals(this.faculty.getFullName())) {
                Object[] obj = new Object[4];
                obj[0] = course;
                obj[1] = course.getCourseName();
                obj[2] = course.getRegion();
                obj[3] = course.getLanguage();
                dtm.addRow(obj);

            }
        }
    }
}
